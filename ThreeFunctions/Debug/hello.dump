
hello:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 e1                	add    %ah,%cl
 8048199:	da 83 da c7 8b a8    	fiaddl -0x57743826(%ebx)
 804819f:	9c                   	pushf  
 80481a0:	53                   	push   %ebx
 80481a1:	46                   	inc    %esi
 80481a2:	6e                   	outsb  %ds:(%esi),(%dx)
 80481a3:	46                   	inc    %esi
 80481a4:	f4                   	hlt    
 80481a5:	58                   	pop    %eax
 80481a6:	b6 6a                	mov    $0x6a,%dh
 80481a8:	54                   	push   %esp
 80481a9:	a8 d5                	test   $0xd5,%al
 80481ab:	1d                   	.byte 0x1d

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	04 00                	add    $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 04 00             	add    %al,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x128>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	29 00                	sub    %eax,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	01 00                	add    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	20 00                	and    %al,(%eax)
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	30 00                	xor    %al,(%eax)
	...
 8048206:	00 00                	add    %al,(%eax)
 8048208:	12 00                	adc    (%eax),%al
 804820a:	00 00                	add    %al,(%eax)
 804820c:	1a 00                	sbb    (%eax),%al
 804820e:	00 00                	add    %al,(%eax)
 8048210:	ac                   	lods   %ds:(%esi),%al
 8048211:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8048214:	04 00                	add    $0x0,%al
 8048216:	00 00                	add    %al,(%eax)
 8048218:	11 00                	adc    %eax,(%eax)
 804821a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804821f:	67 6d                	insl   (%dx),%es:(%di)
 8048221:	6f                   	outsl  %ds:(%esi),(%dx)
 8048222:	6e                   	outsb  %ds:(%esi),(%dx)
 8048223:	5f                   	pop    %edi
 8048224:	73 74                	jae    804829a <_init-0x1a>
 8048226:	61                   	popa   
 8048227:	72 74                	jb     804829d <_init-0x17>
 8048229:	5f                   	pop    %edi
 804822a:	5f                   	pop    %edi
 804822b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804822f:	63 2e                	arpl   %bp,(%esi)
 8048231:	73 6f                	jae    80482a2 <_init-0x12>
 8048233:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048238:	4f                   	dec    %edi
 8048239:	5f                   	pop    %edi
 804823a:	73 74                	jae    80482b0 <_init-0x4>
 804823c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048243:	64 
 8048244:	00 70 72             	add    %dh,0x72(%eax)
 8048247:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%esi),%ebp
 804824e:	6c                   	insb   (%dx),%es:(%edi)
 804824f:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048256:	72 74                	jb     80482cc <_init+0x18>
 8048258:	5f                   	pop    %edi
 8048259:	6d                   	insl   (%dx),%es:(%edi)
 804825a:	61                   	popa   
 804825b:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 8048262:	43                   	inc    %ebx
 8048263:	5f                   	pop    %edi
 8048264:	32 2e                	xor    (%esi),%ch
 8048266:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048268 <.gnu.version>:
 8048268:	00 00                	add    %al,(%eax)
 804826a:	02 00                	add    (%eax),%al
 804826c:	00 00                	add    %al,(%eax)
 804826e:	02 00                	add    (%eax),%al
 8048270:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048274 <.gnu.version_r>:
 8048274:	01 00                	add    %eax,(%eax)
 8048276:	01 00                	add    %eax,(%eax)
 8048278:	10 00                	adc    %al,(%eax)
 804827a:	00 00                	add    %al,(%eax)
 804827c:	10 00                	adc    %al,(%eax)
 804827e:	00 00                	add    %al,(%eax)
 8048280:	00 00                	add    %al,(%eax)
 8048282:	00 00                	add    %al,(%eax)
 8048284:	10 69 69             	adc    %ch,0x69(%ecx)
 8048287:	0d 00 00 02 00       	or     $0x20000,%eax
 804828c:	42                   	inc    %edx
 804828d:	00 00                	add    %al,(%eax)
 804828f:	00 00                	add    %al,(%eax)
 8048291:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048294 <.rel.dyn>:
 8048294:	f0 9f                	lock lahf 
 8048296:	04 08                	add    $0x8,%al
 8048298:	06                   	push   %es
 8048299:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

0804829c <.rel.plt>:
 804829c:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	04 a0                	add    $0xa0,%al
 80482a6:	04 08                	add    $0x8,%al
 80482a8:	07                   	pop    %es
 80482a9:	02 00                	add    (%eax),%al
 80482ab:	00 08                	add    %cl,(%eax)
 80482ad:	a0 04 08 07 03       	mov    0x3070804,%al
	...

Disassembly of section .init:

080482b4 <_init>:
 80482b4:	53                   	push   %ebx
 80482b5:	83 ec 08             	sub    $0x8,%esp
 80482b8:	e8 00 00 00 00       	call   80482bd <_init+0x9>
 80482bd:	5b                   	pop    %ebx
 80482be:	81 c3 37 1d 00 00    	add    $0x1d37,%ebx
 80482c4:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482ca:	85 c0                	test   %eax,%eax
 80482cc:	74 05                	je     80482d3 <_init+0x1f>
 80482ce:	e8 3d 00 00 00       	call   8048310 <__gmon_start__@plt>
 80482d3:	e8 e8 00 00 00       	call   80483c0 <frame_dummy>
 80482d8:	e8 83 02 00 00       	call   8048560 <__do_global_ctors_aux>
 80482dd:	83 c4 08             	add    $0x8,%esp
 80482e0:	5b                   	pop    %ebx
 80482e1:	c3                   	ret    

Disassembly of section .plt:

080482f0 <printf@plt-0x10>:
 80482f0:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80482f6:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482fc:	00 00                	add    %al,(%eax)
	...

08048300 <printf@plt>:
 8048300:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048306:	68 00 00 00 00       	push   $0x0
 804830b:	e9 e0 ff ff ff       	jmp    80482f0 <_init+0x3c>

08048310 <__gmon_start__@plt>:
 8048310:	ff 25 04 a0 04 08    	jmp    *0x804a004
 8048316:	68 08 00 00 00       	push   $0x8
 804831b:	e9 d0 ff ff ff       	jmp    80482f0 <_init+0x3c>

08048320 <__libc_start_main@plt>:
 8048320:	ff 25 08 a0 04 08    	jmp    *0x804a008
 8048326:	68 10 00 00 00       	push   $0x10
 804832b:	e9 c0 ff ff ff       	jmp    80482f0 <_init+0x3c>

Disassembly of section .text:

08048330 <_start>:
 8048330:	31 ed                	xor    %ebp,%ebp
 8048332:	5e                   	pop    %esi
 8048333:	89 e1                	mov    %esp,%ecx
 8048335:	83 e4 f0             	and    $0xfffffff0,%esp
 8048338:	50                   	push   %eax
 8048339:	54                   	push   %esp
 804833a:	52                   	push   %edx
 804833b:	68 50 85 04 08       	push   $0x8048550
 8048340:	68 e0 84 04 08       	push   $0x80484e0
 8048345:	51                   	push   %ecx
 8048346:	56                   	push   %esi
 8048347:	68 0e 84 04 08       	push   $0x804840e
 804834c:	e8 cf ff ff ff       	call   8048320 <__libc_start_main@plt>
 8048351:	f4                   	hlt    
 8048352:	90                   	nop
 8048353:	90                   	nop
 8048354:	90                   	nop
 8048355:	90                   	nop
 8048356:	90                   	nop
 8048357:	90                   	nop
 8048358:	90                   	nop
 8048359:	90                   	nop
 804835a:	90                   	nop
 804835b:	90                   	nop
 804835c:	90                   	nop
 804835d:	90                   	nop
 804835e:	90                   	nop
 804835f:	90                   	nop

08048360 <__do_global_dtors_aux>:
 8048360:	55                   	push   %ebp
 8048361:	89 e5                	mov    %esp,%ebp
 8048363:	53                   	push   %ebx
 8048364:	83 ec 04             	sub    $0x4,%esp
 8048367:	80 3d 14 a0 04 08 00 	cmpb   $0x0,0x804a014
 804836e:	75 3f                	jne    80483af <__do_global_dtors_aux+0x4f>
 8048370:	a1 18 a0 04 08       	mov    0x804a018,%eax
 8048375:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804837a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048380:	c1 fb 02             	sar    $0x2,%ebx
 8048383:	83 eb 01             	sub    $0x1,%ebx
 8048386:	39 d8                	cmp    %ebx,%eax
 8048388:	73 1e                	jae    80483a8 <__do_global_dtors_aux+0x48>
 804838a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048390:	83 c0 01             	add    $0x1,%eax
 8048393:	a3 18 a0 04 08       	mov    %eax,0x804a018
 8048398:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804839f:	a1 18 a0 04 08       	mov    0x804a018,%eax
 80483a4:	39 d8                	cmp    %ebx,%eax
 80483a6:	72 e8                	jb     8048390 <__do_global_dtors_aux+0x30>
 80483a8:	c6 05 14 a0 04 08 01 	movb   $0x1,0x804a014
 80483af:	83 c4 04             	add    $0x4,%esp
 80483b2:	5b                   	pop    %ebx
 80483b3:	5d                   	pop    %ebp
 80483b4:	c3                   	ret    
 80483b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483c0 <frame_dummy>:
 80483c0:	55                   	push   %ebp
 80483c1:	89 e5                	mov    %esp,%ebp
 80483c3:	83 ec 18             	sub    $0x18,%esp
 80483c6:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 80483cb:	85 c0                	test   %eax,%eax
 80483cd:	74 12                	je     80483e1 <frame_dummy+0x21>
 80483cf:	b8 00 00 00 00       	mov    $0x0,%eax
 80483d4:	85 c0                	test   %eax,%eax
 80483d6:	74 09                	je     80483e1 <frame_dummy+0x21>
 80483d8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80483df:	ff d0                	call   *%eax
 80483e1:	c9                   	leave  
 80483e2:	c3                   	ret    
 80483e3:	90                   	nop

080483e4 <add>:
 80483e4:	55                   	push   %ebp
 80483e5:	89 e5                	mov    %esp,%ebp
 80483e7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483ea:	8b 55 08             	mov    0x8(%ebp),%edx
 80483ed:	01 d0                	add    %edx,%eax
 80483ef:	5d                   	pop    %ebp
 80483f0:	c3                   	ret    

080483f1 <sub>:
 80483f1:	55                   	push   %ebp
 80483f2:	89 e5                	mov    %esp,%ebp
 80483f4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483f7:	8b 55 08             	mov    0x8(%ebp),%edx
 80483fa:	89 d1                	mov    %edx,%ecx
 80483fc:	29 c1                	sub    %eax,%ecx
 80483fe:	89 c8                	mov    %ecx,%eax
 8048400:	5d                   	pop    %ebp
 8048401:	c3                   	ret    

08048402 <mul>:
 8048402:	55                   	push   %ebp
 8048403:	89 e5                	mov    %esp,%ebp
 8048405:	8b 45 08             	mov    0x8(%ebp),%eax
 8048408:	0f af 45 0c          	imul   0xc(%ebp),%eax
 804840c:	5d                   	pop    %ebp
 804840d:	c3                   	ret    

0804840e <main>:
 804840e:	55                   	push   %ebp
 804840f:	89 e5                	mov    %esp,%ebp
 8048411:	83 e4 f0             	and    $0xfffffff0,%esp
 8048414:	83 ec 20             	sub    $0x20,%esp
 8048417:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)
 804841e:	00 
 804841f:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048426:	e8 d5 2b 00 00       	call   804b000 <_end+0xfe4>
 804842b:	89 44 24 14          	mov    %eax,0x14(%esp)
 804842f:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
 8048436:	00 
 8048437:	c7 04 24 06 00 00 00 	movl   $0x6,(%esp)
 804843e:	e8 ca 2b 00 00       	call   804b00d <_end+0xff1>
 8048443:	89 44 24 18          	mov    %eax,0x18(%esp)
 8048447:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
 804844e:	00 
 804844f:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048456:	e8 c3 2b 00 00       	call   804b01e <_end+0x1002>
 804845b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804845f:	b8 b0 85 04 08       	mov    $0x80485b0,%eax
 8048464:	8b 54 24 14          	mov    0x14(%esp),%edx
 8048468:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804846c:	c7 44 24 08 05 00 00 	movl   $0x5,0x8(%esp)
 8048473:	00 
 8048474:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 804847b:	00 
 804847c:	89 04 24             	mov    %eax,(%esp)
 804847f:	e8 7c fe ff ff       	call   8048300 <printf@plt>
 8048484:	b8 be 85 04 08       	mov    $0x80485be,%eax
 8048489:	8b 54 24 18          	mov    0x18(%esp),%edx
 804848d:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8048491:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
 8048498:	00 
 8048499:	c7 44 24 04 06 00 00 	movl   $0x6,0x4(%esp)
 80484a0:	00 
 80484a1:	89 04 24             	mov    %eax,(%esp)
 80484a4:	e8 57 fe ff ff       	call   8048300 <printf@plt>
 80484a9:	b8 cc 85 04 08       	mov    $0x80485cc,%eax
 80484ae:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 80484b2:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80484b6:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
 80484bd:	00 
 80484be:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
 80484c5:	00 
 80484c6:	89 04 24             	mov    %eax,(%esp)
 80484c9:	e8 32 fe ff ff       	call   8048300 <printf@plt>
 80484ce:	b8 00 00 00 00       	mov    $0x0,%eax
 80484d3:	c9                   	leave  
 80484d4:	c3                   	ret    
 80484d5:	90                   	nop
 80484d6:	90                   	nop
 80484d7:	90                   	nop
 80484d8:	90                   	nop
 80484d9:	90                   	nop
 80484da:	90                   	nop
 80484db:	90                   	nop
 80484dc:	90                   	nop
 80484dd:	90                   	nop
 80484de:	90                   	nop
 80484df:	90                   	nop

080484e0 <__libc_csu_init>:
 80484e0:	55                   	push   %ebp
 80484e1:	57                   	push   %edi
 80484e2:	56                   	push   %esi
 80484e3:	53                   	push   %ebx
 80484e4:	e8 69 00 00 00       	call   8048552 <__i686.get_pc_thunk.bx>
 80484e9:	81 c3 0b 1b 00 00    	add    $0x1b0b,%ebx
 80484ef:	83 ec 1c             	sub    $0x1c,%esp
 80484f2:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 80484f6:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 80484fc:	e8 b3 fd ff ff       	call   80482b4 <_init>
 8048501:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048507:	29 c7                	sub    %eax,%edi
 8048509:	c1 ff 02             	sar    $0x2,%edi
 804850c:	85 ff                	test   %edi,%edi
 804850e:	74 29                	je     8048539 <__libc_csu_init+0x59>
 8048510:	31 f6                	xor    %esi,%esi
 8048512:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048518:	8b 44 24 38          	mov    0x38(%esp),%eax
 804851c:	89 2c 24             	mov    %ebp,(%esp)
 804851f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048523:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048527:	89 44 24 04          	mov    %eax,0x4(%esp)
 804852b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048532:	83 c6 01             	add    $0x1,%esi
 8048535:	39 fe                	cmp    %edi,%esi
 8048537:	75 df                	jne    8048518 <__libc_csu_init+0x38>
 8048539:	83 c4 1c             	add    $0x1c,%esp
 804853c:	5b                   	pop    %ebx
 804853d:	5e                   	pop    %esi
 804853e:	5f                   	pop    %edi
 804853f:	5d                   	pop    %ebp
 8048540:	c3                   	ret    
 8048541:	eb 0d                	jmp    8048550 <__libc_csu_fini>
 8048543:	90                   	nop
 8048544:	90                   	nop
 8048545:	90                   	nop
 8048546:	90                   	nop
 8048547:	90                   	nop
 8048548:	90                   	nop
 8048549:	90                   	nop
 804854a:	90                   	nop
 804854b:	90                   	nop
 804854c:	90                   	nop
 804854d:	90                   	nop
 804854e:	90                   	nop
 804854f:	90                   	nop

08048550 <__libc_csu_fini>:
 8048550:	f3 c3                	repz ret 

08048552 <__i686.get_pc_thunk.bx>:
 8048552:	8b 1c 24             	mov    (%esp),%ebx
 8048555:	c3                   	ret    
 8048556:	90                   	nop
 8048557:	90                   	nop
 8048558:	90                   	nop
 8048559:	90                   	nop
 804855a:	90                   	nop
 804855b:	90                   	nop
 804855c:	90                   	nop
 804855d:	90                   	nop
 804855e:	90                   	nop
 804855f:	90                   	nop

08048560 <__do_global_ctors_aux>:
 8048560:	55                   	push   %ebp
 8048561:	89 e5                	mov    %esp,%ebp
 8048563:	53                   	push   %ebx
 8048564:	83 ec 04             	sub    $0x4,%esp
 8048567:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 804856c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804856f:	74 13                	je     8048584 <__do_global_ctors_aux+0x24>
 8048571:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 8048576:	66 90                	xchg   %ax,%ax
 8048578:	83 eb 04             	sub    $0x4,%ebx
 804857b:	ff d0                	call   *%eax
 804857d:	8b 03                	mov    (%ebx),%eax
 804857f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048582:	75 f4                	jne    8048578 <__do_global_ctors_aux+0x18>
 8048584:	83 c4 04             	add    $0x4,%esp
 8048587:	5b                   	pop    %ebx
 8048588:	5d                   	pop    %ebp
 8048589:	c3                   	ret    
 804858a:	90                   	nop
 804858b:	90                   	nop

Disassembly of section .fini:

0804858c <_fini>:
 804858c:	53                   	push   %ebx
 804858d:	83 ec 08             	sub    $0x8,%esp
 8048590:	e8 00 00 00 00       	call   8048595 <_fini+0x9>
 8048595:	5b                   	pop    %ebx
 8048596:	81 c3 5f 1a 00 00    	add    $0x1a5f,%ebx
 804859c:	e8 bf fd ff ff       	call   8048360 <__do_global_dtors_aux>
 80485a1:	83 c4 08             	add    $0x8,%esp
 80485a4:	5b                   	pop    %ebx
 80485a5:	c3                   	ret    

Disassembly of section .rodata:

080485a8 <_fp_hw>:
 80485a8:	03 00                	add    (%eax),%eax
	...

080485ac <_IO_stdin_used>:
 80485ac:	01 00                	add    %eax,(%eax)
 80485ae:	02 00                	add    (%eax),%al
 80485b0:	25 64 20 2b 20       	and    $0x202b2064,%eax
 80485b5:	25 64 20 3d 20       	and    $0x203d2064,%eax
 80485ba:	25 64 0a 00 25       	and    $0x25000a64,%eax
 80485bf:	64 20 2d 20 25 64 20 	and    %ch,%fs:0x20642520
 80485c6:	3d 20 25 64 0a       	cmp    $0xa642520,%eax
 80485cb:	00 25 64 20 2a 20    	add    %ah,0x202a2064
 80485d1:	25 64 20 3d 20       	and    $0x203d2064,%eax
 80485d6:	25                   	.byte 0x25
 80485d7:	64 0a 00             	or     %fs:(%eax),%al

Disassembly of section .eh_frame_hdr:

080485dc <.eh_frame_hdr>:
 80485dc:	01 1b                	add    %ebx,(%ebx)
 80485de:	03 3b                	add    (%ebx),%edi
 80485e0:	48                   	dec    %eax
 80485e1:	00 00                	add    %al,(%eax)
 80485e3:	00 08                	add    %cl,(%eax)
 80485e5:	00 00                	add    %al,(%eax)
 80485e7:	00 14 fd ff ff 64 00 	add    %dl,0x64ffff(,%edi,8)
 80485ee:	00 00                	add    %al,(%eax)
 80485f0:	08 fe                	or     %bh,%dh
 80485f2:	ff                   	(bad)  
 80485f3:	ff 88 00 00 00 15    	decl   0x15000000(%eax)
 80485f9:	fe                   	(bad)  
 80485fa:	ff                   	(bad)  
 80485fb:	ff a8 00 00 00 26    	ljmp   *0x26000000(%eax)
 8048601:	fe                   	(bad)  
 8048602:	ff                   	(bad)  
 8048603:	ff c8                	dec    %eax
 8048605:	00 00                	add    %al,(%eax)
 8048607:	00 32                	add    %dh,(%edx)
 8048609:	fe                   	(bad)  
 804860a:	ff                   	(bad)  
 804860b:	ff e8                	ljmp   *<internal disassembler error>
 804860d:	00 00                	add    %al,(%eax)
 804860f:	00 04 ff             	add    %al,(%edi,%edi,8)
 8048612:	ff                   	(bad)  
 8048613:	ff 08                	decl   (%eax)
 8048615:	01 00                	add    %eax,(%eax)
 8048617:	00 74 ff ff          	add    %dh,-0x1(%edi,%edi,8)
 804861b:	ff 44 01 00          	incl   0x0(%ecx,%eax,1)
 804861f:	00 76 ff             	add    %dh,-0x1(%esi)
 8048622:	ff                   	(bad)  
 8048623:	ff 58 01             	lcall  *0x1(%eax)
	...

Disassembly of section .eh_frame:

08048628 <__FRAME_END__-0x120>:
 8048628:	14 00                	adc    $0x0,%al
 804862a:	00 00                	add    %al,(%eax)
 804862c:	00 00                	add    %al,(%eax)
 804862e:	00 00                	add    %al,(%eax)
 8048630:	01 7a 52             	add    %edi,0x52(%edx)
 8048633:	00 01                	add    %al,(%ecx)
 8048635:	7c 08                	jl     804863f <_IO_stdin_used+0x93>
 8048637:	01 1b                	add    %ebx,(%ebx)
 8048639:	0c 04                	or     $0x4,%al
 804863b:	04 88                	add    $0x88,%al
 804863d:	01 00                	add    %eax,(%eax)
 804863f:	00 20                	add    %ah,(%eax)
 8048641:	00 00                	add    %al,(%eax)
 8048643:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048646:	00 00                	add    %al,(%eax)
 8048648:	a8 fc                	test   $0xfc,%al
 804864a:	ff                   	(bad)  
 804864b:	ff 40 00             	incl   0x0(%eax)
 804864e:	00 00                	add    %al,(%eax)
 8048650:	00 0e                	add    %cl,(%esi)
 8048652:	08 46 0e             	or     %al,0xe(%esi)
 8048655:	0c 4a                	or     $0x4a,%al
 8048657:	0f 0b                	ud2    
 8048659:	74 04                	je     804865f <_IO_stdin_used+0xb3>
 804865b:	78 00                	js     804865d <_IO_stdin_used+0xb1>
 804865d:	3f                   	aas    
 804865e:	1a 3b                	sbb    (%ebx),%bh
 8048660:	2a 32                	sub    (%edx),%dh
 8048662:	24 22                	and    $0x22,%al
 8048664:	1c 00                	sbb    $0x0,%al
 8048666:	00 00                	add    %al,(%eax)
 8048668:	40                   	inc    %eax
 8048669:	00 00                	add    %al,(%eax)
 804866b:	00 78 fd             	add    %bh,-0x3(%eax)
 804866e:	ff                   	(bad)  
 804866f:	ff 0d 00 00 00 00    	decl   0x0
 8048675:	41                   	inc    %ecx
 8048676:	0e                   	push   %cs
 8048677:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804867d:	49                   	dec    %ecx
 804867e:	0c 04                	or     $0x4,%al
 8048680:	04 c5                	add    $0xc5,%al
 8048682:	00 00                	add    %al,(%eax)
 8048684:	1c 00                	sbb    $0x0,%al
 8048686:	00 00                	add    %al,(%eax)
 8048688:	60                   	pusha  
 8048689:	00 00                	add    %al,(%eax)
 804868b:	00 65 fd             	add    %ah,-0x3(%ebp)
 804868e:	ff                   	(bad)  
 804868f:	ff 11                	call   *(%ecx)
 8048691:	00 00                	add    %al,(%eax)
 8048693:	00 00                	add    %al,(%eax)
 8048695:	41                   	inc    %ecx
 8048696:	0e                   	push   %cs
 8048697:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 804869d:	4d                   	dec    %ebp
 804869e:	0c 04                	or     $0x4,%al
 80486a0:	04 c5                	add    $0xc5,%al
 80486a2:	00 00                	add    %al,(%eax)
 80486a4:	1c 00                	sbb    $0x0,%al
 80486a6:	00 00                	add    %al,(%eax)
 80486a8:	80 00 00             	addb   $0x0,(%eax)
 80486ab:	00 56 fd             	add    %dl,-0x3(%esi)
 80486ae:	ff                   	(bad)  
 80486af:	ff 0c 00             	decl   (%eax,%eax,1)
 80486b2:	00 00                	add    %al,(%eax)
 80486b4:	00 41 0e             	add    %al,0xe(%ecx)
 80486b7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80486bd:	48                   	dec    %eax
 80486be:	0c 04                	or     $0x4,%al
 80486c0:	04 c5                	add    $0xc5,%al
 80486c2:	00 00                	add    %al,(%eax)
 80486c4:	1c 00                	sbb    $0x0,%al
 80486c6:	00 00                	add    %al,(%eax)
 80486c8:	a0 00 00 00 42       	mov    0x42000000,%al
 80486cd:	fd                   	std    
 80486ce:	ff                   	(bad)  
 80486cf:	ff c7                	inc    %edi
 80486d1:	00 00                	add    %al,(%eax)
 80486d3:	00 00                	add    %al,(%eax)
 80486d5:	41                   	inc    %ecx
 80486d6:	0e                   	push   %cs
 80486d7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 80486dd:	02 c3                	add    %bl,%al
 80486df:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
 80486e2:	04 00                	add    $0x0,%al
 80486e4:	38 00                	cmp    %al,(%eax)
 80486e6:	00 00                	add    %al,(%eax)
 80486e8:	c0 00 00             	rolb   $0x0,(%eax)
 80486eb:	00 f4                	add    %dh,%ah
 80486ed:	fd                   	std    
 80486ee:	ff                   	(bad)  
 80486ef:	ff 61 00             	jmp    *0x0(%ecx)
 80486f2:	00 00                	add    %al,(%eax)
 80486f4:	00 41 0e             	add    %al,0xe(%ecx)
 80486f7:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80486fd:	87 03                	xchg   %eax,(%ebx)
 80486ff:	41                   	inc    %ecx
 8048700:	0e                   	push   %cs
 8048701:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048707:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 804870e:	0e                   	push   %cs
 804870f:	14 41                	adc    $0x41,%al
 8048711:	0e                   	push   %cs
 8048712:	10 c3                	adc    %al,%bl
 8048714:	41                   	inc    %ecx
 8048715:	0e                   	push   %cs
 8048716:	0c c6                	or     $0xc6,%al
 8048718:	41                   	inc    %ecx
 8048719:	0e                   	push   %cs
 804871a:	08 c7                	or     %al,%bh
 804871c:	41                   	inc    %ecx
 804871d:	0e                   	push   %cs
 804871e:	04 c5                	add    $0xc5,%al
 8048720:	10 00                	adc    %al,(%eax)
 8048722:	00 00                	add    %al,(%eax)
 8048724:	fc                   	cld    
 8048725:	00 00                	add    %al,(%eax)
 8048727:	00 28                	add    %ch,(%eax)
 8048729:	fe                   	(bad)  
 804872a:	ff                   	(bad)  
 804872b:	ff 02                	incl   (%edx)
 804872d:	00 00                	add    %al,(%eax)
 804872f:	00 00                	add    %al,(%eax)
 8048731:	00 00                	add    %al,(%eax)
 8048733:	00 10                	add    %dl,(%eax)
 8048735:	00 00                	add    %al,(%eax)
 8048737:	00 10                	add    %dl,(%eax)
 8048739:	01 00                	add    %eax,(%eax)
 804873b:	00 16                	add    %dl,(%esi)
 804873d:	fe                   	(bad)  
 804873e:	ff                   	(bad)  
 804873f:	ff 04 00             	incl   (%eax,%eax,1)
 8048742:	00 00                	add    %al,(%eax)
 8048744:	00 00                	add    %al,(%eax)
	...

08048748 <__FRAME_END__>:
 8048748:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	b4 82                	mov    $0x82,%ah
 8049f36:	04 08                	add    $0x8,%al
 8049f38:	0d 00 00 00 8c       	or     $0x8c000000,%eax
 8049f3d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	1c 82                	sbb    $0x82,%al
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	4c                   	dec    %esp
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	18 00                	sbb    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 9c 82 04 08 11 00 	add    %bl,0x110804(%edx,%eax,4)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	94                   	xchg   %eax,%esp
 8049f95:	82                   	(bad)  
 8049f96:	04 08                	add    $0x8,%al
 8049f98:	12 00                	adc    (%eax),%al
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 74             	ljmp   *0x74(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 68             	ljmp   *0x68(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	06                   	push   %es
 804a001:	83 04 08 16          	addl   $0x16,(%eax,%ecx,1)
 804a005:	83 04 08 26          	addl   $0x26,(%eax,%ecx,1)
 804a009:	83                   	.byte 0x83
 804a00a:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a00c <__data_start>:
 804a00c:	00 00                	add    %al,(%eax)
	...

0804a010 <__dso_handle>:
 804a010:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a014 <completed.6159>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <dtor_idx.6161>:
 804a018:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804823c>
   a:	74 75                	je     81 <_init-0x8048233>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x804821e>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
